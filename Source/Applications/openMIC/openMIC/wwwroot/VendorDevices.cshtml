@*******************************************************************************************************
//  Vendors.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may
//  not use this file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  01/15/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using System.Text
@using openMIC.Model
@using RazorEngine.Templating
@inherits TemplateBase<AppModel>
@section StyleSheets {
    <style>
        html, body {
            height: 100%;
        }
    </style>
}
@{
    Layout = "Layout.cshtml";
    ViewBag.Title = "Vendor Devices";
    ViewBag.PageControlScripts = new StringBuilder();

    ViewBag.HeaderColumns = new[]
    {   //    { "Field", "Label", "Classes" }
        new[] { "Name", "Name", "text-left" },
        new[] { "Description", "Description", "text-left" },
        new[] { "URL", "URL", "text-left" }
    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog().ToString();
}
@helper BodyRows()
{
    <td width="25%" class="text-left valign-middle" data-bind="text: Name"></td>
    <td width="30%" class="text-left table-cell-wrap"><div data-bind="text: $($element.parentElement).truncateToWidth(Description, 2)"></div></td>
    <td width="40%" class="text-left table-cell-hard-wrap"><a data-bind="attr:{href: notNull(URL)}" target="_blank"><div data-bind="text: $($element.parentElement.parentElement).truncateToWidth(URL, 2)"></div></a></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord" hub-dependent><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord" hub-dependent><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}
@helper AddNewEditDialog()
{
    <form role="form">
        <div class="form-group" data-bind="css: {'has-error': isEmpty(Name()), 'has-feedback': isEmpty(Name())}">
            <label for="name">Name:</label>
            <input type="text" class="form-control" data-bind="textInput: Name" id="name" required>
            <span class="glyphicon glyphicon-remove form-control-feedback" data-bind="visible: isEmpty(Name())"></span>
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <input type="text" class="form-control" data-bind="textInput: Description" id="description">
        </div>
    </form>
}
@Include("PagedViewModel.cshtml")
@section Scripts {
    @Raw(ViewBag.PageControlScripts.ToString())
    <script>
        // Configure view model
        viewModel.defaultSortField = "ID";
        viewModel.labelField = "Name";
        viewModel.identityField = "ID";

        viewModel.setQueryRecordCount(function () {
            return dataHub.queryVendorDeviceCount();
        });

        viewModel.setQueryRecords(function (sortField, ascending, page, pageSize) {
            return dataHub.queryVendorDevices(sortField, ascending, page, pageSize);
        });

        viewModel.setDeleteRecord(function (id) {
            return dataHub.deleteVendorDevice(id);
        });

        viewModel.setNewRecord(function () {
            return dataHub.newVendorDevice();
        });

        viewModel.setAddNewRecord(function (record) {
            return dataHub.addNewVendorDevice(record);
        });

        viewModel.setUpdateRecord(function (record) {
            return dataHub.updateVendorDevice(record);
        });

        $(document).ready(function () {
            $("#addNewEditDialog").on('shown.bs.modal', function () {
                $("#name").focus();
            });
        });
    </script>
}
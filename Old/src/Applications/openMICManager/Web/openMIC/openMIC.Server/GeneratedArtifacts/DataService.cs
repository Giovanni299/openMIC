//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the openMICData datasource.
    /// </summary>
    public sealed partial class openMICDataService
        : global::LightSwitchApplication.openMICData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public openMICDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Inserting(global::LightSwitchApplication.AccessLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Inserted(global::LightSwitchApplication.AccessLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Updating(global::LightSwitchApplication.AccessLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Updated(global::LightSwitchApplication.AccessLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Deleting(global::LightSwitchApplication.AccessLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Deleted(global::LightSwitchApplication.AccessLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Validate(global::LightSwitchApplication.AccessLog entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccessLogs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AccessLog, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Inserting(global::LightSwitchApplication.AlarmLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Inserted(global::LightSwitchApplication.AlarmLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Updating(global::LightSwitchApplication.AlarmLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Updated(global::LightSwitchApplication.AlarmLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Deleting(global::LightSwitchApplication.AlarmLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Deleted(global::LightSwitchApplication.AlarmLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Validate(global::LightSwitchApplication.AlarmLog entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlarmLogs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AlarmLog, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Inserting(global::LightSwitchApplication.Alarm entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Inserted(global::LightSwitchApplication.Alarm entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Updating(global::LightSwitchApplication.Alarm entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Updated(global::LightSwitchApplication.Alarm entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Deleting(global::LightSwitchApplication.Alarm entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Deleted(global::LightSwitchApplication.Alarm entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Validate(global::LightSwitchApplication.Alarm entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarms_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Alarm, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Inserting(global::LightSwitchApplication.AuditLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Inserted(global::LightSwitchApplication.AuditLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Updating(global::LightSwitchApplication.AuditLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Updated(global::LightSwitchApplication.AuditLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Deleting(global::LightSwitchApplication.AuditLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Deleted(global::LightSwitchApplication.AuditLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Validate(global::LightSwitchApplication.AuditLog entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLogs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditLog, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Inserting(global::LightSwitchApplication.DefaultValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Inserted(global::LightSwitchApplication.DefaultValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Updating(global::LightSwitchApplication.DefaultValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Updated(global::LightSwitchApplication.DefaultValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Deleting(global::LightSwitchApplication.DefaultValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Deleted(global::LightSwitchApplication.DefaultValue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Validate(global::LightSwitchApplication.DefaultValue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DefaultValue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Inserting(global::LightSwitchApplication.Device entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Inserted(global::LightSwitchApplication.Device entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Updating(global::LightSwitchApplication.Device entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Updated(global::LightSwitchApplication.Device entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Deleting(global::LightSwitchApplication.Device entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Deleted(global::LightSwitchApplication.Device entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Validate(global::LightSwitchApplication.Device entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Device, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Inserting(global::LightSwitchApplication.ErrorLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Inserted(global::LightSwitchApplication.ErrorLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Updating(global::LightSwitchApplication.ErrorLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Updated(global::LightSwitchApplication.ErrorLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Deleting(global::LightSwitchApplication.ErrorLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Deleted(global::LightSwitchApplication.ErrorLog entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Validate(global::LightSwitchApplication.ErrorLog entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorLogs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ErrorLog, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Inserting(global::LightSwitchApplication.Historian entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Inserted(global::LightSwitchApplication.Historian entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Updating(global::LightSwitchApplication.Historian entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Updated(global::LightSwitchApplication.Historian entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Deleting(global::LightSwitchApplication.Historian entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Deleted(global::LightSwitchApplication.Historian entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Validate(global::LightSwitchApplication.Historian entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historians_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Historian, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Inserting(global::LightSwitchApplication.Interconnection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Inserted(global::LightSwitchApplication.Interconnection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Updating(global::LightSwitchApplication.Interconnection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Updated(global::LightSwitchApplication.Interconnection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Deleting(global::LightSwitchApplication.Interconnection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Deleted(global::LightSwitchApplication.Interconnection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Validate(global::LightSwitchApplication.Interconnection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Interconnections_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Interconnection, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Inserting(global::LightSwitchApplication.Measurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Inserted(global::LightSwitchApplication.Measurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Updating(global::LightSwitchApplication.Measurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Updated(global::LightSwitchApplication.Measurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Deleting(global::LightSwitchApplication.Measurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Deleted(global::LightSwitchApplication.Measurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Validate(global::LightSwitchApplication.Measurement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurements_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Measurement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Inserting(global::LightSwitchApplication.Node entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Inserted(global::LightSwitchApplication.Node entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Updating(global::LightSwitchApplication.Node entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Updated(global::LightSwitchApplication.Node entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Deleting(global::LightSwitchApplication.Node entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Deleted(global::LightSwitchApplication.Node entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Validate(global::LightSwitchApplication.Node entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Nodes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Node, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Inserting(global::LightSwitchApplication.Protocol entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Inserted(global::LightSwitchApplication.Protocol entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Updating(global::LightSwitchApplication.Protocol entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Updated(global::LightSwitchApplication.Protocol entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Deleting(global::LightSwitchApplication.Protocol entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Deleted(global::LightSwitchApplication.Protocol entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Validate(global::LightSwitchApplication.Protocol entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Protocols_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Protocol, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Inserting(global::LightSwitchApplication.SignalType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Inserted(global::LightSwitchApplication.SignalType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Updating(global::LightSwitchApplication.SignalType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Updated(global::LightSwitchApplication.SignalType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Deleting(global::LightSwitchApplication.SignalType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Deleted(global::LightSwitchApplication.SignalType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Validate(global::LightSwitchApplication.SignalType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SignalType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Inserting(global::LightSwitchApplication.Statistic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Inserted(global::LightSwitchApplication.Statistic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Updating(global::LightSwitchApplication.Statistic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Updated(global::LightSwitchApplication.Statistic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Deleting(global::LightSwitchApplication.Statistic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Deleted(global::LightSwitchApplication.Statistic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Validate(global::LightSwitchApplication.Statistic entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Statistics_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Statistic, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Inserting(global::LightSwitchApplication.VendorDevice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Inserted(global::LightSwitchApplication.VendorDevice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Updating(global::LightSwitchApplication.VendorDevice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Updated(global::LightSwitchApplication.VendorDevice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Deleting(global::LightSwitchApplication.VendorDevice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Deleted(global::LightSwitchApplication.VendorDevice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Validate(global::LightSwitchApplication.VendorDevice entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorDevices_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.VendorDevice, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Inserting(global::LightSwitchApplication.Vendor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Inserted(global::LightSwitchApplication.Vendor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Updating(global::LightSwitchApplication.Vendor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Updated(global::LightSwitchApplication.Vendor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Deleting(global::LightSwitchApplication.Vendor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Deleted(global::LightSwitchApplication.Vendor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Validate(global::LightSwitchApplication.Vendor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Vendor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValueCount_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DefaultValueCount_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultValueCount_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DefaultValue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DefaultValueCount_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DefaultValue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DefaultValueCount_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void openMICData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.AccessLog>
                __AccessLogsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.AccessLog>(
                    "AccessLogs",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AccessLogs_Filter);
            private static bool __AccessLogs_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AccessLogs_CanInsert(ref result);
                return result;
            }
            private static bool __AccessLogs_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AccessLogs_CanUpdate(ref result);
                return result;
            }
            private static bool __AccessLogs_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AccessLogs_CanDelete(ref result);
                return result;
            }
            private static bool __AccessLogs_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AccessLogs_CanRead(ref result);
                return result;
            }
            private static void __AccessLogs_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e)
            {
                d.AccessLogs_Inserting(e);
            }
            private static void __AccessLogs_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e)
            {
                d.AccessLogs_Inserted(e);
            }
            private static void __AccessLogs_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e)
            {
                d.AccessLogs_Updating(e);
            }
            private static void __AccessLogs_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e)
            {
                d.AccessLogs_Updated(e);
            }
            private static void __AccessLogs_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e)
            {
                d.AccessLogs_Deleting(e);
            }
            private static void __AccessLogs_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e)
            {
                d.AccessLogs_Deleted(e);
            }
            private static void __AccessLogs_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AccessLog e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AccessLogs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AccessLog, bool>> __AccessLogs_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AccessLog, bool>> filter = null;
                d.AccessLogs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.AlarmLog>
                __AlarmLogsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.AlarmLog>(
                    "AlarmLogs",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AlarmLogs_Filter);
            private static bool __AlarmLogs_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AlarmLogs_CanInsert(ref result);
                return result;
            }
            private static bool __AlarmLogs_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AlarmLogs_CanUpdate(ref result);
                return result;
            }
            private static bool __AlarmLogs_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AlarmLogs_CanDelete(ref result);
                return result;
            }
            private static bool __AlarmLogs_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AlarmLogs_CanRead(ref result);
                return result;
            }
            private static void __AlarmLogs_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e)
            {
                d.AlarmLogs_Inserting(e);
            }
            private static void __AlarmLogs_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e)
            {
                d.AlarmLogs_Inserted(e);
            }
            private static void __AlarmLogs_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e)
            {
                d.AlarmLogs_Updating(e);
            }
            private static void __AlarmLogs_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e)
            {
                d.AlarmLogs_Updated(e);
            }
            private static void __AlarmLogs_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e)
            {
                d.AlarmLogs_Deleting(e);
            }
            private static void __AlarmLogs_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e)
            {
                d.AlarmLogs_Deleted(e);
            }
            private static void __AlarmLogs_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AlarmLog e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AlarmLogs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AlarmLog, bool>> __AlarmLogs_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AlarmLog, bool>> filter = null;
                d.AlarmLogs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Alarm>
                __AlarmsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Alarm>(
                    "Alarms",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Alarms_Filter);
            private static bool __Alarms_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Alarms_CanInsert(ref result);
                return result;
            }
            private static bool __Alarms_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Alarms_CanUpdate(ref result);
                return result;
            }
            private static bool __Alarms_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Alarms_CanDelete(ref result);
                return result;
            }
            private static bool __Alarms_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Alarms_CanRead(ref result);
                return result;
            }
            private static void __Alarms_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e)
            {
                d.Alarms_Inserting(e);
            }
            private static void __Alarms_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e)
            {
                d.Alarms_Inserted(e);
            }
            private static void __Alarms_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e)
            {
                d.Alarms_Updating(e);
            }
            private static void __Alarms_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e)
            {
                d.Alarms_Updated(e);
            }
            private static void __Alarms_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e)
            {
                d.Alarms_Deleting(e);
            }
            private static void __Alarms_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e)
            {
                d.Alarms_Deleted(e);
            }
            private static void __Alarms_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Alarms_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Alarm, bool>> __Alarms_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Alarm, bool>> filter = null;
                d.Alarms_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.AuditLog>
                __AuditLogsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.AuditLog>(
                    "AuditLogs",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__AuditLogs_Filter);
            private static bool __AuditLogs_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AuditLogs_CanInsert(ref result);
                return result;
            }
            private static bool __AuditLogs_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AuditLogs_CanUpdate(ref result);
                return result;
            }
            private static bool __AuditLogs_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AuditLogs_CanDelete(ref result);
                return result;
            }
            private static bool __AuditLogs_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.AuditLogs_CanRead(ref result);
                return result;
            }
            private static void __AuditLogs_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e)
            {
                d.AuditLogs_Inserting(e);
            }
            private static void __AuditLogs_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e)
            {
                d.AuditLogs_Inserted(e);
            }
            private static void __AuditLogs_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e)
            {
                d.AuditLogs_Updating(e);
            }
            private static void __AuditLogs_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e)
            {
                d.AuditLogs_Updated(e);
            }
            private static void __AuditLogs_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e)
            {
                d.AuditLogs_Deleting(e);
            }
            private static void __AuditLogs_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e)
            {
                d.AuditLogs_Deleted(e);
            }
            private static void __AuditLogs_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AuditLogs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditLog, bool>> __AuditLogs_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditLog, bool>> filter = null;
                d.AuditLogs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Company>
                __CompaniesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Company>(
                    "Companies",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Companies_Filter);
            private static bool __Companies_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Companies_CanInsert(ref result);
                return result;
            }
            private static bool __Companies_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Companies_CanUpdate(ref result);
                return result;
            }
            private static bool __Companies_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Companies_CanDelete(ref result);
                return result;
            }
            private static bool __Companies_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Companies_CanRead(ref result);
                return result;
            }
            private static void __Companies_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserting(e);
            }
            private static void __Companies_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserted(e);
            }
            private static void __Companies_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updating(e);
            }
            private static void __Companies_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updated(e);
            }
            private static void __Companies_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleting(e);
            }
            private static void __Companies_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleted(e);
            }
            private static void __Companies_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companies_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.DefaultValue>
                __DefaultValuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.DefaultValue>(
                    "DefaultValues",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValues_Filter);
            private static bool __DefaultValues_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.DefaultValues_CanInsert(ref result);
                return result;
            }
            private static bool __DefaultValues_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.DefaultValues_CanUpdate(ref result);
                return result;
            }
            private static bool __DefaultValues_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.DefaultValues_CanDelete(ref result);
                return result;
            }
            private static bool __DefaultValues_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.DefaultValues_CanRead(ref result);
                return result;
            }
            private static void __DefaultValues_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e)
            {
                d.DefaultValues_Inserting(e);
            }
            private static void __DefaultValues_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e)
            {
                d.DefaultValues_Inserted(e);
            }
            private static void __DefaultValues_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e)
            {
                d.DefaultValues_Updating(e);
            }
            private static void __DefaultValues_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e)
            {
                d.DefaultValues_Updated(e);
            }
            private static void __DefaultValues_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e)
            {
                d.DefaultValues_Deleting(e);
            }
            private static void __DefaultValues_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e)
            {
                d.DefaultValues_Deleted(e);
            }
            private static void __DefaultValues_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.DefaultValue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DefaultValues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DefaultValue, bool>> __DefaultValues_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DefaultValue, bool>> filter = null;
                d.DefaultValues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Device>
                __DevicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Device>(
                    "Devices",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Devices_Filter);
            private static bool __Devices_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Devices_CanInsert(ref result);
                return result;
            }
            private static bool __Devices_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Devices_CanUpdate(ref result);
                return result;
            }
            private static bool __Devices_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Devices_CanDelete(ref result);
                return result;
            }
            private static bool __Devices_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Devices_CanRead(ref result);
                return result;
            }
            private static void __Devices_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e)
            {
                d.Devices_Inserting(e);
            }
            private static void __Devices_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e)
            {
                d.Devices_Inserted(e);
            }
            private static void __Devices_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e)
            {
                d.Devices_Updating(e);
            }
            private static void __Devices_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e)
            {
                d.Devices_Updated(e);
            }
            private static void __Devices_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e)
            {
                d.Devices_Deleting(e);
            }
            private static void __Devices_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e)
            {
                d.Devices_Deleted(e);
            }
            private static void __Devices_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Devices_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Device, bool>> __Devices_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Device, bool>> filter = null;
                d.Devices_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.ErrorLog>
                __ErrorLogsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.ErrorLog>(
                    "ErrorLogs",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__ErrorLogs_Filter);
            private static bool __ErrorLogs_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.ErrorLogs_CanInsert(ref result);
                return result;
            }
            private static bool __ErrorLogs_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.ErrorLogs_CanUpdate(ref result);
                return result;
            }
            private static bool __ErrorLogs_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.ErrorLogs_CanDelete(ref result);
                return result;
            }
            private static bool __ErrorLogs_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.ErrorLogs_CanRead(ref result);
                return result;
            }
            private static void __ErrorLogs_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e)
            {
                d.ErrorLogs_Inserting(e);
            }
            private static void __ErrorLogs_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e)
            {
                d.ErrorLogs_Inserted(e);
            }
            private static void __ErrorLogs_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e)
            {
                d.ErrorLogs_Updating(e);
            }
            private static void __ErrorLogs_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e)
            {
                d.ErrorLogs_Updated(e);
            }
            private static void __ErrorLogs_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e)
            {
                d.ErrorLogs_Deleting(e);
            }
            private static void __ErrorLogs_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e)
            {
                d.ErrorLogs_Deleted(e);
            }
            private static void __ErrorLogs_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.ErrorLog e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ErrorLogs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ErrorLog, bool>> __ErrorLogs_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ErrorLog, bool>> filter = null;
                d.ErrorLogs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Historian>
                __HistoriansEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Historian>(
                    "Historians",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Historians_Filter);
            private static bool __Historians_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Historians_CanInsert(ref result);
                return result;
            }
            private static bool __Historians_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Historians_CanUpdate(ref result);
                return result;
            }
            private static bool __Historians_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Historians_CanDelete(ref result);
                return result;
            }
            private static bool __Historians_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Historians_CanRead(ref result);
                return result;
            }
            private static void __Historians_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e)
            {
                d.Historians_Inserting(e);
            }
            private static void __Historians_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e)
            {
                d.Historians_Inserted(e);
            }
            private static void __Historians_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e)
            {
                d.Historians_Updating(e);
            }
            private static void __Historians_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e)
            {
                d.Historians_Updated(e);
            }
            private static void __Historians_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e)
            {
                d.Historians_Deleting(e);
            }
            private static void __Historians_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e)
            {
                d.Historians_Deleted(e);
            }
            private static void __Historians_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Historians_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Historian, bool>> __Historians_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Historian, bool>> filter = null;
                d.Historians_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Interconnection>
                __InterconnectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Interconnection>(
                    "Interconnections",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Interconnections_Filter);
            private static bool __Interconnections_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Interconnections_CanInsert(ref result);
                return result;
            }
            private static bool __Interconnections_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Interconnections_CanUpdate(ref result);
                return result;
            }
            private static bool __Interconnections_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Interconnections_CanDelete(ref result);
                return result;
            }
            private static bool __Interconnections_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Interconnections_CanRead(ref result);
                return result;
            }
            private static void __Interconnections_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e)
            {
                d.Interconnections_Inserting(e);
            }
            private static void __Interconnections_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e)
            {
                d.Interconnections_Inserted(e);
            }
            private static void __Interconnections_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e)
            {
                d.Interconnections_Updating(e);
            }
            private static void __Interconnections_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e)
            {
                d.Interconnections_Updated(e);
            }
            private static void __Interconnections_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e)
            {
                d.Interconnections_Deleting(e);
            }
            private static void __Interconnections_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e)
            {
                d.Interconnections_Deleted(e);
            }
            private static void __Interconnections_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Interconnection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Interconnections_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Interconnection, bool>> __Interconnections_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Interconnection, bool>> filter = null;
                d.Interconnections_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Measurement>
                __MeasurementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Measurement>(
                    "Measurements",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Measurements_Filter);
            private static bool __Measurements_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Measurements_CanInsert(ref result);
                return result;
            }
            private static bool __Measurements_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Measurements_CanUpdate(ref result);
                return result;
            }
            private static bool __Measurements_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Measurements_CanDelete(ref result);
                return result;
            }
            private static bool __Measurements_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Measurements_CanRead(ref result);
                return result;
            }
            private static void __Measurements_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e)
            {
                d.Measurements_Inserting(e);
            }
            private static void __Measurements_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e)
            {
                d.Measurements_Inserted(e);
            }
            private static void __Measurements_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e)
            {
                d.Measurements_Updating(e);
            }
            private static void __Measurements_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e)
            {
                d.Measurements_Updated(e);
            }
            private static void __Measurements_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e)
            {
                d.Measurements_Deleting(e);
            }
            private static void __Measurements_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e)
            {
                d.Measurements_Deleted(e);
            }
            private static void __Measurements_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Measurement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Measurements_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Measurement, bool>> __Measurements_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Measurement, bool>> filter = null;
                d.Measurements_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Node>
                __NodesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Node>(
                    "Nodes",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Nodes_Filter);
            private static bool __Nodes_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Nodes_CanInsert(ref result);
                return result;
            }
            private static bool __Nodes_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Nodes_CanUpdate(ref result);
                return result;
            }
            private static bool __Nodes_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Nodes_CanDelete(ref result);
                return result;
            }
            private static bool __Nodes_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Nodes_CanRead(ref result);
                return result;
            }
            private static void __Nodes_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e)
            {
                d.Nodes_Inserting(e);
            }
            private static void __Nodes_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e)
            {
                d.Nodes_Inserted(e);
            }
            private static void __Nodes_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e)
            {
                d.Nodes_Updating(e);
            }
            private static void __Nodes_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e)
            {
                d.Nodes_Updated(e);
            }
            private static void __Nodes_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e)
            {
                d.Nodes_Deleting(e);
            }
            private static void __Nodes_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e)
            {
                d.Nodes_Deleted(e);
            }
            private static void __Nodes_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Nodes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Node, bool>> __Nodes_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Node, bool>> filter = null;
                d.Nodes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Protocol>
                __ProtocolsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Protocol>(
                    "Protocols",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Protocols_Filter);
            private static bool __Protocols_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Protocols_CanInsert(ref result);
                return result;
            }
            private static bool __Protocols_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Protocols_CanUpdate(ref result);
                return result;
            }
            private static bool __Protocols_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Protocols_CanDelete(ref result);
                return result;
            }
            private static bool __Protocols_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Protocols_CanRead(ref result);
                return result;
            }
            private static void __Protocols_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e)
            {
                d.Protocols_Inserting(e);
            }
            private static void __Protocols_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e)
            {
                d.Protocols_Inserted(e);
            }
            private static void __Protocols_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e)
            {
                d.Protocols_Updating(e);
            }
            private static void __Protocols_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e)
            {
                d.Protocols_Updated(e);
            }
            private static void __Protocols_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e)
            {
                d.Protocols_Deleting(e);
            }
            private static void __Protocols_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e)
            {
                d.Protocols_Deleted(e);
            }
            private static void __Protocols_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Protocol e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Protocols_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Protocol, bool>> __Protocols_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Protocol, bool>> filter = null;
                d.Protocols_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.SignalType>
                __SignalTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.SignalType>(
                    "SignalTypes",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SignalTypes_Filter);
            private static bool __SignalTypes_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.SignalTypes_CanInsert(ref result);
                return result;
            }
            private static bool __SignalTypes_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.SignalTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __SignalTypes_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.SignalTypes_CanDelete(ref result);
                return result;
            }
            private static bool __SignalTypes_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.SignalTypes_CanRead(ref result);
                return result;
            }
            private static void __SignalTypes_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e)
            {
                d.SignalTypes_Inserting(e);
            }
            private static void __SignalTypes_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e)
            {
                d.SignalTypes_Inserted(e);
            }
            private static void __SignalTypes_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e)
            {
                d.SignalTypes_Updating(e);
            }
            private static void __SignalTypes_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e)
            {
                d.SignalTypes_Updated(e);
            }
            private static void __SignalTypes_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e)
            {
                d.SignalTypes_Deleting(e);
            }
            private static void __SignalTypes_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e)
            {
                d.SignalTypes_Deleted(e);
            }
            private static void __SignalTypes_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SignalTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SignalType, bool>> __SignalTypes_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SignalType, bool>> filter = null;
                d.SignalTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Statistic>
                __StatisticsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Statistic>(
                    "Statistics",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Statistics_Filter);
            private static bool __Statistics_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Statistics_CanInsert(ref result);
                return result;
            }
            private static bool __Statistics_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Statistics_CanUpdate(ref result);
                return result;
            }
            private static bool __Statistics_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Statistics_CanDelete(ref result);
                return result;
            }
            private static bool __Statistics_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Statistics_CanRead(ref result);
                return result;
            }
            private static void __Statistics_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e)
            {
                d.Statistics_Inserting(e);
            }
            private static void __Statistics_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e)
            {
                d.Statistics_Inserted(e);
            }
            private static void __Statistics_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e)
            {
                d.Statistics_Updating(e);
            }
            private static void __Statistics_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e)
            {
                d.Statistics_Updated(e);
            }
            private static void __Statistics_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e)
            {
                d.Statistics_Deleting(e);
            }
            private static void __Statistics_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e)
            {
                d.Statistics_Deleted(e);
            }
            private static void __Statistics_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Statistic e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Statistics_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Statistic, bool>> __Statistics_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Statistic, bool>> filter = null;
                d.Statistics_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.VendorDevice>
                __VendorDevicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.VendorDevice>(
                    "VendorDevices",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__VendorDevices_Filter);
            private static bool __VendorDevices_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.VendorDevices_CanInsert(ref result);
                return result;
            }
            private static bool __VendorDevices_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.VendorDevices_CanUpdate(ref result);
                return result;
            }
            private static bool __VendorDevices_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.VendorDevices_CanDelete(ref result);
                return result;
            }
            private static bool __VendorDevices_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.VendorDevices_CanRead(ref result);
                return result;
            }
            private static void __VendorDevices_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e)
            {
                d.VendorDevices_Inserting(e);
            }
            private static void __VendorDevices_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e)
            {
                d.VendorDevices_Inserted(e);
            }
            private static void __VendorDevices_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e)
            {
                d.VendorDevices_Updating(e);
            }
            private static void __VendorDevices_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e)
            {
                d.VendorDevices_Updated(e);
            }
            private static void __VendorDevices_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e)
            {
                d.VendorDevices_Deleting(e);
            }
            private static void __VendorDevices_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e)
            {
                d.VendorDevices_Deleted(e);
            }
            private static void __VendorDevices_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.VendorDevice e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.VendorDevices_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.VendorDevice, bool>> __VendorDevices_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.VendorDevice, bool>> filter = null;
                d.VendorDevices_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Vendor>
                __VendorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.Vendor>(
                    "Vendors",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_CanInsert,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_CanUpdate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_CanDelete,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_CanRead,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Inserting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Inserted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Updating,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Updated,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Deleting,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Deleted,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Validate,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Vendors_Filter);
            private static bool __Vendors_CanInsert(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Vendors_CanInsert(ref result);
                return result;
            }
            private static bool __Vendors_CanUpdate(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Vendors_CanUpdate(ref result);
                return result;
            }
            private static bool __Vendors_CanDelete(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Vendors_CanDelete(ref result);
                return result;
            }
            private static bool __Vendors_CanRead(global::LightSwitchApplication.openMICDataService d)
            {
                bool result = true;
                d.Vendors_CanRead(ref result);
                return result;
            }
            private static void __Vendors_Inserting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e)
            {
                d.Vendors_Inserting(e);
            }
            private static void __Vendors_Inserted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e)
            {
                d.Vendors_Inserted(e);
            }
            private static void __Vendors_Updating(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e)
            {
                d.Vendors_Updating(e);
            }
            private static void __Vendors_Updated(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e)
            {
                d.Vendors_Updated(e);
            }
            private static void __Vendors_Deleting(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e)
            {
                d.Vendors_Deleting(e);
            }
            private static void __Vendors_Deleted(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e)
            {
                d.Vendors_Deleted(e);
            }
            private static void __Vendors_Validate(global::LightSwitchApplication.openMICDataService d, global::LightSwitchApplication.Vendor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Vendors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Vendor, bool>> __Vendors_Filter(global::LightSwitchApplication.openMICDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Vendor, bool>> filter = null;
                d.Vendors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.openMICDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.openMICDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.openMICDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.openMICDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.openMICDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.openMICDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.DefaultValue>
                __DefaultValueCountEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.openMICDataService, global::LightSwitchApplication.DefaultValue>(
                    "DefaultValueCount",
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValueCount_CanExecute,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValueCount_Executing,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValueCount_Executed,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValueCount_Failed,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__DefaultValueCount_PreprocessQuery);
            private static bool __DefaultValueCount_CanExecute(global::LightSwitchApplication.openMICDataService d, bool r)
            {
                d.DefaultValueCount_CanExecute(ref r);
                return r;
            }
            private static void __DefaultValueCount_Executing(global::LightSwitchApplication.openMICDataService d, object[] args)
            {
                d.DefaultValueCount_Executing();
            }
            private static void __DefaultValueCount_Executed(global::LightSwitchApplication.openMICDataService d, object[] args)
            {
                d.DefaultValueCount_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DefaultValue>)args[0]);
            }
            private static void __DefaultValueCount_Failed(global::LightSwitchApplication.openMICDataService d, object[] args, global::System.Exception ex)
            {
                d.DefaultValueCount_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DefaultValueCount_PreprocessQuery(global::LightSwitchApplication.openMICDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DefaultValue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DefaultValue>)args[0];
                d.DefaultValueCount_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.openMICDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.openMICDataService>(
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.openMICDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.openMICDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.openMICDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.openMICDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.openMICDataService>(
                    global::LightSwitchApplication.openMICDataService.DetailsClass.__openMICData_InitializingConnection);
            private static void __openMICData_InitializingConnection(global::LightSwitchApplication.openMICDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.openMICData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}

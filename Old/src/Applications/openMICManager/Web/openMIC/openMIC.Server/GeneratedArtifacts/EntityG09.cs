

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class Historian : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Historian entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Historian()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Historian(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Historian> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Historian.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historian_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Historian_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Acronym
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Acronym);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Acronym, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Acronym_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Acronym_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Acronym_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AssemblyName
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.AssemblyName);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.AssemblyName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssemblyName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssemblyName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssemblyName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TypeName
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.TypeName);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.TypeName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ConnectionString
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.ConnectionString);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.ConnectionString, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionString_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionString_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionString_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsLocal
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.IsLocal);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.IsLocal, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsLocal_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsLocal_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsLocal_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MeasurementReportingInterval
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.MeasurementReportingInterval);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.MeasurementReportingInterval, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MeasurementReportingInterval_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MeasurementReportingInterval_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MeasurementReportingInterval_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int LoadOrder
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.LoadOrder);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.LoadOrder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Enabled
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Enabled);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Enabled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.UpdatedOn);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.UpdatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UpdatedBy
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.UpdatedBy);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.UpdatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Node Node
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Node);
            }
            set
            {
                global::LightSwitchApplication.Historian.DetailsClass.SetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Node, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Device> Devices
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Devices);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Device> DevicesQuery
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetQuery(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Devices);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.DefaultValue> DefaultValues
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetValue(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.DefaultValues);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.DefaultValue> DefaultValuesQuery
        {
            get
            {
                return global::LightSwitchApplication.Historian.DetailsClass.GetQuery(this, global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.DefaultValues);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Historian,
                global::LightSwitchApplication.Historian.DetailsClass,
                global::LightSwitchApplication.Historian.DetailsClass.IImplementation,
                global::LightSwitchApplication.Historian.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>.Entry
                __HistorianEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>.Entry(
                    global::LightSwitchApplication.Historian.DetailsClass.__Historian_CreateNew,
                    global::LightSwitchApplication.Historian.DetailsClass.__Historian_Created,
                    global::LightSwitchApplication.Historian.DetailsClass.__Historian_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Historian __Historian_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Historian> es)
            {
                return new global::LightSwitchApplication.Historian(es);
            }
            private static void __Historian_Created(global::LightSwitchApplication.Historian e)
            {
                e.Historian_Created();
            }
            private static bool __Historian_AllowSaveWithErrors(global::LightSwitchApplication.Historian e)
            {
                bool result = false;
                e.Historian_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Historian.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> Acronym
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Acronym) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> AssemblyName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.AssemblyName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> TypeName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.TypeName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> ConnectionString
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.ConnectionString) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool> IsLocal
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.IsLocal) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int> MeasurementReportingInterval
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.MeasurementReportingInterval) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int> LoadOrder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.LoadOrder) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool> Enabled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Enabled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime> UpdatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.UpdatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string> UpdatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.UpdatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Node> Node
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Node) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Node>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Device> Devices
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Devices) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Device>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.DefaultValue> DefaultValues
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.DefaultValues) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.DefaultValue>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string Acronym { get; set; }
                new string Name { get; set; }
                new string AssemblyName { get; set; }
                new string TypeName { get; set; }
                new string ConnectionString { get; set; }
                new bool IsLocal { get; set; }
                new int MeasurementReportingInterval { get; set; }
                new string Description { get; set; }
                new int LoadOrder { get; set; }
                new bool Enabled { get; set; }
                new global::System.DateTime CreatedOn { get; set; }
                new string CreatedBy { get; set; }
                new global::System.DateTime UpdatedOn { get; set; }
                new string UpdatedBy { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Node { get; set; }
                new global::System.Collections.IEnumerable Devices { get; }
                new global::System.Collections.IEnumerable DefaultValues { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    Acronym = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "Acronym",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Acronym_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Acronym_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Acronym_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Acronym_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Acronym_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Acronym_OnValueChanged);
                private static void _Acronym_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._Acronym, sf);
                }
                private static bool _Acronym_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.Acronym_IsReadOnly(ref result);
                    return result;
                }
                private static void _Acronym_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Acronym_Validate(r);
                }
                private static string _Acronym_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.Acronym;
                }
                private static void _Acronym_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Acronym = v;
                }
                private static void _Acronym_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.Acronym_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    AssemblyName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "AssemblyName",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._AssemblyName_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._AssemblyName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._AssemblyName_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._AssemblyName_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._AssemblyName_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._AssemblyName_OnValueChanged);
                private static void _AssemblyName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._AssemblyName, sf);
                }
                private static bool _AssemblyName_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.AssemblyName_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssemblyName_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssemblyName_Validate(r);
                }
                private static string _AssemblyName_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.AssemblyName;
                }
                private static void _AssemblyName_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AssemblyName = v;
                }
                private static void _AssemblyName_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.AssemblyName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    TypeName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "TypeName",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._TypeName_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._TypeName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._TypeName_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._TypeName_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._TypeName_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._TypeName_OnValueChanged);
                private static void _TypeName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._TypeName, sf);
                }
                private static bool _TypeName_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.TypeName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TypeName_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TypeName_Validate(r);
                }
                private static string _TypeName_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.TypeName;
                }
                private static void _TypeName_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TypeName = v;
                }
                private static void _TypeName_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.TypeName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    ConnectionString = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "ConnectionString",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ConnectionString_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ConnectionString_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ConnectionString_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ConnectionString_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ConnectionString_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._ConnectionString_OnValueChanged);
                private static void _ConnectionString_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._ConnectionString, sf);
                }
                private static bool _ConnectionString_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.ConnectionString_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConnectionString_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConnectionString_Validate(r);
                }
                private static string _ConnectionString_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.ConnectionString;
                }
                private static void _ConnectionString_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ConnectionString = v;
                }
                private static void _ConnectionString_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.ConnectionString_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Entry
                    IsLocal = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Entry(
                        "IsLocal",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._IsLocal_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._IsLocal_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._IsLocal_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._IsLocal_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._IsLocal_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._IsLocal_OnValueChanged);
                private static void _IsLocal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._IsLocal, sf);
                }
                private static bool _IsLocal_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.IsLocal_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsLocal_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsLocal_Validate(r);
                }
                private static bool _IsLocal_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.IsLocal;
                }
                private static void _IsLocal_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsLocal = v;
                }
                private static void _IsLocal_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.IsLocal_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Entry
                    MeasurementReportingInterval = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Entry(
                        "MeasurementReportingInterval",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._MeasurementReportingInterval_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._MeasurementReportingInterval_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._MeasurementReportingInterval_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._MeasurementReportingInterval_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._MeasurementReportingInterval_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._MeasurementReportingInterval_OnValueChanged);
                private static void _MeasurementReportingInterval_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._MeasurementReportingInterval, sf);
                }
                private static bool _MeasurementReportingInterval_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.MeasurementReportingInterval_IsReadOnly(ref result);
                    return result;
                }
                private static void _MeasurementReportingInterval_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MeasurementReportingInterval_Validate(r);
                }
                private static int _MeasurementReportingInterval_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.MeasurementReportingInterval;
                }
                private static void _MeasurementReportingInterval_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MeasurementReportingInterval = v;
                }
                private static void _MeasurementReportingInterval_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.MeasurementReportingInterval_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Entry
                    LoadOrder = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Entry(
                        "LoadOrder",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._LoadOrder_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._LoadOrder_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._LoadOrder_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._LoadOrder_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._LoadOrder_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._LoadOrder_OnValueChanged);
                private static void _LoadOrder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._LoadOrder, sf);
                }
                private static bool _LoadOrder_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.LoadOrder_IsReadOnly(ref result);
                    return result;
                }
                private static void _LoadOrder_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LoadOrder_Validate(r);
                }
                private static int _LoadOrder_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.LoadOrder;
                }
                private static void _LoadOrder_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, int v)
                {
                    d.ImplementationEntity.LoadOrder = v;
                }
                private static void _LoadOrder_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.LoadOrder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Entry
                    Enabled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Entry(
                        "Enabled",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Enabled_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Enabled_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Enabled_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Enabled_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Enabled_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Enabled_OnValueChanged);
                private static void _Enabled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._Enabled, sf);
                }
                private static bool _Enabled_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.Enabled_IsReadOnly(ref result);
                    return result;
                }
                private static void _Enabled_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Enabled_Validate(r);
                }
                private static bool _Enabled_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.Enabled;
                }
                private static void _Enabled_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Enabled = v;
                }
                private static void _Enabled_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.Enabled_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.DateTime _CreatedOn_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreatedOn = global::LightSwitchApplication.Historian.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Entry
                    UpdatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Entry(
                        "UpdatedOn",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedOn_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedOn_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedOn_OnValueChanged);
                private static void _UpdatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedOn, sf);
                }
                private static bool _UpdatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.UpdatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedOn_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedOn_Validate(r);
                }
                private static global::System.DateTime _UpdatedOn_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedOn;
                }
                private static void _UpdatedOn_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.UpdatedOn = global::LightSwitchApplication.Historian.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _UpdatedOn_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.UpdatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry
                    UpdatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Entry(
                        "UpdatedBy",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedBy_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedBy_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._UpdatedBy_OnValueChanged);
                private static void _UpdatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedBy, sf);
                }
                private static bool _UpdatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.UpdatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedBy_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedBy_Validate(r);
                }
                private static string _UpdatedBy_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedBy;
                }
                private static void _UpdatedBy_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UpdatedBy = v;
                }
                private static void _UpdatedBy_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.UpdatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Node>.Entry
                    Node = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Node>.Entry(
                        "Node",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_ComputeIsReadOnly,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_Validate,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_GetCoreImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_GetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_SetImplementationValue,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_Refresh,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Node_OnValueChanged);
                private static void _Node_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Node>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._Node, sf);
                }
                private static bool _Node_ComputeIsReadOnly(global::LightSwitchApplication.Historian e)
                {
                    bool result = false;
                    e.Node_IsReadOnly(ref result);
                    return result;
                }
                private static void _Node_Validate(global::LightSwitchApplication.Historian e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Node_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Node_GetCoreImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.Node;
                }
                private static global::LightSwitchApplication.Node _Node_GetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Node, ref d._Node);
                }
                private static void _Node_SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass d, global::LightSwitchApplication.Node v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Node, ref d._Node, (i, ev) => i.Node = ev, v);
                }
                private static void _Node_Refresh(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Node, ref d._Node);
                }
                private static void _Node_OnValueChanged(global::LightSwitchApplication.Historian e)
                {
                    e.Node_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Device>.Entry
                    Devices = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Device>.Entry(
                        "Devices",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Devices_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Devices_GetReferencedEntities,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._Devices_GetEntityCollection);
                private static void _Devices_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Device>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._Devices, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Device> _Devices_GetReferencedEntities(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.Devices, ref d._Devices);
                }
                private static global::System.Collections.IEnumerable _Devices_GetEntityCollection(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.Devices;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.DefaultValue>.Entry
                    DefaultValues = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.DefaultValue>.Entry(
                        "DefaultValues",
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._DefaultValues_Stub,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._DefaultValues_GetReferencedEntities,
                        global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties._DefaultValues_GetEntityCollection);
                private static void _DefaultValues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Historian.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.DefaultValue>.Data> c, global::LightSwitchApplication.Historian.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultValues, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DefaultValue> _DefaultValues_GetReferencedEntities(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.DefaultValue, global::LightSwitchApplication.DefaultValue.DetailsClass>(global::LightSwitchApplication.Historian.DetailsClass.PropertySetProperties.DefaultValues, ref d._DefaultValues);
                }
                private static global::System.Collections.IEnumerable _DefaultValues_GetEntityCollection(global::LightSwitchApplication.Historian.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultValues;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _Acronym;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _AssemblyName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _TypeName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _ConnectionString;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Data _IsLocal;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Data _MeasurementReportingInterval;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, int>.Data _LoadOrder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, bool>.Data _Enabled;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::System.DateTime>.Data _UpdatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, string>.Data _UpdatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Node>.Data _Node;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.Device>.Data _Devices;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass, global::LightSwitchApplication.DefaultValue>.Data _DefaultValues;
            
        }
    
        #endregion
    }
    
    #endregion
}



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class Node : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Node entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Node()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Node(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Node> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Node.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Longitude
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Longitude);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Longitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Longitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Longitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Longitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Latitude
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Latitude);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Latitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Latitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Latitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Latitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ImagePath
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ImagePath);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ImagePath, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImagePath_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImagePath_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImagePath_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Settings
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Settings);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Settings, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Settings_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Settings_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Settings_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MenuType
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.MenuType);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.MenuType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MenuData
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.MenuData);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.MenuData, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuData_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuData_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuData_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Master
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Master);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Master, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Master_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Master_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Master_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int LoadOrder
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.LoadOrder);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.LoadOrder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Enabled
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Enabled);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Enabled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.UpdatedOn);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.UpdatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UpdatedBy
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.UpdatedBy);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.UpdatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Alarm> Alarms
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Alarms);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Alarm> AlarmsQuery
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetQuery(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Alarms);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Device> Devices
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Devices);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Device> DevicesQuery
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetQuery(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Devices);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Historian> Historians
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Historians);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Historian> HistoriansQuery
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetQuery(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Historians);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Company Company
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Company);
            }
            set
            {
                global::LightSwitchApplication.Node.DetailsClass.SetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Company, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.DefaultValue> DefaultValues
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetValue(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.DefaultValues);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.DefaultValue> DefaultValuesQuery
        {
            get
            {
                return global::LightSwitchApplication.Node.DetailsClass.GetQuery(this, global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.DefaultValues);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Node,
                global::LightSwitchApplication.Node.DetailsClass,
                global::LightSwitchApplication.Node.DetailsClass.IImplementation,
                global::LightSwitchApplication.Node.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>.Entry
                __NodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>.Entry(
                    global::LightSwitchApplication.Node.DetailsClass.__Node_CreateNew,
                    global::LightSwitchApplication.Node.DetailsClass.__Node_Created,
                    global::LightSwitchApplication.Node.DetailsClass.__Node_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Node __Node_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Node> es)
            {
                return new global::LightSwitchApplication.Node(es);
            }
            private static void __Node_Created(global::LightSwitchApplication.Node e)
            {
                e.Node_Created();
            }
            private static bool __Node_AllowSaveWithErrors(global::LightSwitchApplication.Node e)
            {
                bool result = false;
                e.Node_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Node.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Guid> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>> Longitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Longitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>> Latitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Latitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> ImagePath
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.ImagePath) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> Settings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Settings) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> MenuType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.MenuType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> MenuData
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.MenuData) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool> Master
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Master) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, int> LoadOrder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.LoadOrder) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool> Enabled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Enabled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime> UpdatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.UpdatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string> UpdatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.UpdatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Alarm> Alarms
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Alarms) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Alarm>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Device> Devices
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Devices) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Device>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Historian> Historians
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Historians) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Historian>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Company> Company
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Company) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.DefaultValue> DefaultValues
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.DefaultValues) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.DefaultValue>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid ID { get; set; }
                new string Name { get; set; }
                new global::System.Nullable<decimal> Longitude { get; set; }
                new global::System.Nullable<decimal> Latitude { get; set; }
                new string Description { get; set; }
                new string ImagePath { get; set; }
                new string Settings { get; set; }
                new string MenuType { get; set; }
                new string MenuData { get; set; }
                new bool Master { get; set; }
                new int LoadOrder { get; set; }
                new bool Enabled { get; set; }
                new global::System.DateTime CreatedOn { get; set; }
                new string CreatedBy { get; set; }
                new global::System.DateTime UpdatedOn { get; set; }
                new string UpdatedBy { get; set; }
                new global::System.Collections.IEnumerable Alarms { get; }
                new global::System.Collections.IEnumerable Devices { get; }
                new global::System.Collections.IEnumerable Historians { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Company { get; set; }
                new global::System.Collections.IEnumerable DefaultValues { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Guid>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Guid>.Entry(
                        "ID",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ID_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static global::System.Guid _ID_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.ID = v;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Longitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Longitude",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Longitude_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Longitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Longitude_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Longitude_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Longitude_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Longitude_OnValueChanged);
                private static void _Longitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Longitude, sf);
                }
                private static bool _Longitude_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Longitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Longitude_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Longitude_Validate(r);
                }
                private static global::System.Nullable<decimal> _Longitude_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Longitude;
                }
                private static void _Longitude_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Longitude = v;
                }
                private static void _Longitude_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Longitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Latitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Latitude",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Latitude_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Latitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Latitude_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Latitude_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Latitude_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Latitude_OnValueChanged);
                private static void _Latitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Latitude, sf);
                }
                private static bool _Latitude_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Latitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Latitude_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Latitude_Validate(r);
                }
                private static global::System.Nullable<decimal> _Latitude_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Latitude;
                }
                private static void _Latitude_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Latitude = v;
                }
                private static void _Latitude_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Latitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    ImagePath = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "ImagePath",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ImagePath_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ImagePath_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ImagePath_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ImagePath_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ImagePath_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._ImagePath_OnValueChanged);
                private static void _ImagePath_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._ImagePath, sf);
                }
                private static bool _ImagePath_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.ImagePath_IsReadOnly(ref result);
                    return result;
                }
                private static void _ImagePath_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ImagePath_Validate(r);
                }
                private static string _ImagePath_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.ImagePath;
                }
                private static void _ImagePath_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ImagePath = v;
                }
                private static void _ImagePath_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.ImagePath_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    Settings = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "Settings",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Settings_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Settings_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Settings_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Settings_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Settings_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Settings_OnValueChanged);
                private static void _Settings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Settings, sf);
                }
                private static bool _Settings_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Settings_IsReadOnly(ref result);
                    return result;
                }
                private static void _Settings_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Settings_Validate(r);
                }
                private static string _Settings_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Settings;
                }
                private static void _Settings_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Settings = v;
                }
                private static void _Settings_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Settings_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    MenuType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "MenuType",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuType_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuType_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuType_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuType_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuType_OnValueChanged);
                private static void _MenuType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._MenuType, sf);
                }
                private static bool _MenuType_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.MenuType_IsReadOnly(ref result);
                    return result;
                }
                private static void _MenuType_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MenuType_Validate(r);
                }
                private static string _MenuType_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.MenuType;
                }
                private static void _MenuType_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MenuType = v;
                }
                private static void _MenuType_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.MenuType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    MenuData = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "MenuData",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuData_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuData_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuData_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuData_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuData_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._MenuData_OnValueChanged);
                private static void _MenuData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._MenuData, sf);
                }
                private static bool _MenuData_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.MenuData_IsReadOnly(ref result);
                    return result;
                }
                private static void _MenuData_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MenuData_Validate(r);
                }
                private static string _MenuData_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.MenuData;
                }
                private static void _MenuData_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MenuData = v;
                }
                private static void _MenuData_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.MenuData_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Entry
                    Master = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Entry(
                        "Master",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Master_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Master_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Master_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Master_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Master_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Master_OnValueChanged);
                private static void _Master_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Master, sf);
                }
                private static bool _Master_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Master_IsReadOnly(ref result);
                    return result;
                }
                private static void _Master_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Master_Validate(r);
                }
                private static bool _Master_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Master;
                }
                private static void _Master_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Master = v;
                }
                private static void _Master_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Master_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, int>.Entry
                    LoadOrder = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, int>.Entry(
                        "LoadOrder",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._LoadOrder_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._LoadOrder_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._LoadOrder_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._LoadOrder_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._LoadOrder_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._LoadOrder_OnValueChanged);
                private static void _LoadOrder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, int>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._LoadOrder, sf);
                }
                private static bool _LoadOrder_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.LoadOrder_IsReadOnly(ref result);
                    return result;
                }
                private static void _LoadOrder_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LoadOrder_Validate(r);
                }
                private static int _LoadOrder_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.LoadOrder;
                }
                private static void _LoadOrder_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, int v)
                {
                    d.ImplementationEntity.LoadOrder = v;
                }
                private static void _LoadOrder_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.LoadOrder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Entry
                    Enabled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Entry(
                        "Enabled",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Enabled_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Enabled_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Enabled_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Enabled_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Enabled_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Enabled_OnValueChanged);
                private static void _Enabled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Enabled, sf);
                }
                private static bool _Enabled_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Enabled_IsReadOnly(ref result);
                    return result;
                }
                private static void _Enabled_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Enabled_Validate(r);
                }
                private static bool _Enabled_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Enabled;
                }
                private static void _Enabled_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Enabled = v;
                }
                private static void _Enabled_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Enabled_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.DateTime _CreatedOn_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreatedOn = global::LightSwitchApplication.Node.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Entry
                    UpdatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Entry(
                        "UpdatedOn",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedOn_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedOn_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedOn_OnValueChanged);
                private static void _UpdatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedOn, sf);
                }
                private static bool _UpdatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.UpdatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedOn_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedOn_Validate(r);
                }
                private static global::System.DateTime _UpdatedOn_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedOn;
                }
                private static void _UpdatedOn_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.UpdatedOn = global::LightSwitchApplication.Node.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _UpdatedOn_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.UpdatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry
                    UpdatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Entry(
                        "UpdatedBy",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedBy_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedBy_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._UpdatedBy_OnValueChanged);
                private static void _UpdatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedBy, sf);
                }
                private static bool _UpdatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.UpdatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedBy_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedBy_Validate(r);
                }
                private static string _UpdatedBy_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedBy;
                }
                private static void _UpdatedBy_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UpdatedBy = v;
                }
                private static void _UpdatedBy_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.UpdatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Alarm>.Entry
                    Alarms = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Alarm>.Entry(
                        "Alarms",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Alarms_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Alarms_GetReferencedEntities,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Alarms_GetEntityCollection);
                private static void _Alarms_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Alarm>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Alarms, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Alarm> _Alarms_GetReferencedEntities(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Alarms, ref d._Alarms);
                }
                private static global::System.Collections.IEnumerable _Alarms_GetEntityCollection(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Alarms;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Device>.Entry
                    Devices = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Device>.Entry(
                        "Devices",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Devices_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Devices_GetReferencedEntities,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Devices_GetEntityCollection);
                private static void _Devices_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Device>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Devices, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Device> _Devices_GetReferencedEntities(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Devices, ref d._Devices);
                }
                private static global::System.Collections.IEnumerable _Devices_GetEntityCollection(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Devices;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Historian>.Entry
                    Historians = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Historian>.Entry(
                        "Historians",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Historians_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Historians_GetReferencedEntities,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Historians_GetEntityCollection);
                private static void _Historians_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Historian>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Historians, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Historian> _Historians_GetReferencedEntities(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Historian, global::LightSwitchApplication.Historian.DetailsClass>(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Historians, ref d._Historians);
                }
                private static global::System.Collections.IEnumerable _Historians_GetEntityCollection(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Historians;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Company = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Company",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_ComputeIsReadOnly,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_Validate,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_GetCoreImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_GetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_SetImplementationValue,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_Refresh,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._Company_OnValueChanged);
                private static void _Company_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._Company, sf);
                }
                private static bool _Company_ComputeIsReadOnly(global::LightSwitchApplication.Node e)
                {
                    bool result = false;
                    e.Company_IsReadOnly(ref result);
                    return result;
                }
                private static void _Company_Validate(global::LightSwitchApplication.Node e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Company_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Company_GetCoreImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.Company;
                }
                private static global::LightSwitchApplication.Company _Company_GetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass d, global::LightSwitchApplication.Company v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Company, ref d._Company, (i, ev) => i.Company = ev, v);
                }
                private static void _Company_Refresh(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_OnValueChanged(global::LightSwitchApplication.Node e)
                {
                    e.Company_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.DefaultValue>.Entry
                    DefaultValues = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.DefaultValue>.Entry(
                        "DefaultValues",
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._DefaultValues_Stub,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._DefaultValues_GetReferencedEntities,
                        global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties._DefaultValues_GetEntityCollection);
                private static void _DefaultValues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Node.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.DefaultValue>.Data> c, global::LightSwitchApplication.Node.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultValues, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DefaultValue> _DefaultValues_GetReferencedEntities(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.DefaultValue, global::LightSwitchApplication.DefaultValue.DetailsClass>(global::LightSwitchApplication.Node.DetailsClass.PropertySetProperties.DefaultValues, ref d._DefaultValues);
                }
                private static global::System.Collections.IEnumerable _DefaultValues_GetEntityCollection(global::LightSwitchApplication.Node.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultValues;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Guid>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Data _Longitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.Nullable<decimal>>.Data _Latitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _ImagePath;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _Settings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _MenuType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _MenuData;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Data _Master;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, int>.Data _LoadOrder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, bool>.Data _Enabled;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::System.DateTime>.Data _UpdatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, string>.Data _UpdatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Alarm>.Data _Alarms;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Device>.Data _Devices;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Historian>.Data _Historians;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.Company>.Data _Company;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass, global::LightSwitchApplication.DefaultValue>.Data _DefaultValues;
            
        }
    
        #endregion
    }
    
    #endregion
}

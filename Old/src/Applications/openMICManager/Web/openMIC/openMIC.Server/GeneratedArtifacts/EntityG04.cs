

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class AuditLog : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the AuditLog entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AuditLog()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AuditLog(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AuditLog> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.AuditLog.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLog_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditLog_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TableName
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.TableName);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.TableName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrimaryKeyColumn
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.PrimaryKeyColumn);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.PrimaryKeyColumn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryKeyColumn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryKeyColumn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryKeyColumn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrimaryKeyValue
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.PrimaryKeyValue);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.PrimaryKeyValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryKeyValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryKeyValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryKeyValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ColumnName
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.ColumnName);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.ColumnName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ColumnName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ColumnName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ColumnName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OriginalValue
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.OriginalValue);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.OriginalValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OriginalValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OriginalValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OriginalValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NewValue
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.NewValue);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.NewValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Deleted
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.Deleted);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.Deleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UpdatedBy
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.UpdatedBy);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.UpdatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return global::LightSwitchApplication.AuditLog.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.UpdatedOn);
            }
            set
            {
                global::LightSwitchApplication.AuditLog.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.UpdatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.AuditLog,
                global::LightSwitchApplication.AuditLog.DetailsClass,
                global::LightSwitchApplication.AuditLog.DetailsClass.IImplementation,
                global::LightSwitchApplication.AuditLog.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass>.Entry
                __AuditLogEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass>.Entry(
                    global::LightSwitchApplication.AuditLog.DetailsClass.__AuditLog_CreateNew,
                    global::LightSwitchApplication.AuditLog.DetailsClass.__AuditLog_Created,
                    global::LightSwitchApplication.AuditLog.DetailsClass.__AuditLog_AllowSaveWithErrors);
            private static global::LightSwitchApplication.AuditLog __AuditLog_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AuditLog> es)
            {
                return new global::LightSwitchApplication.AuditLog(es);
            }
            private static void __AuditLog_Created(global::LightSwitchApplication.AuditLog e)
            {
                e.AuditLog_Created();
            }
            private static bool __AuditLog_AllowSaveWithErrors(global::LightSwitchApplication.AuditLog e)
            {
                bool result = false;
                e.AuditLog_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.AuditLog.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> TableName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.TableName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> PrimaryKeyColumn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.PrimaryKeyColumn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> PrimaryKeyValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.PrimaryKeyValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> ColumnName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.ColumnName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> OriginalValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.OriginalValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> NewValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.NewValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, bool> Deleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.Deleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string> UpdatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.UpdatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, global::System.DateTime> UpdatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties.UpdatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, global::System.DateTime>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string TableName { get; set; }
                new string PrimaryKeyColumn { get; set; }
                new string PrimaryKeyValue { get; set; }
                new string ColumnName { get; set; }
                new string OriginalValue { get; set; }
                new string NewValue { get; set; }
                new bool Deleted { get; set; }
                new string UpdatedBy { get; set; }
                new global::System.DateTime UpdatedOn { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, int>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    TableName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "TableName",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._TableName_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._TableName_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._TableName_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._TableName_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._TableName_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._TableName_OnValueChanged);
                private static void _TableName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._TableName, sf);
                }
                private static bool _TableName_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.TableName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TableName_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TableName_Validate(r);
                }
                private static string _TableName_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.TableName;
                }
                private static void _TableName_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TableName = v;
                }
                private static void _TableName_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.TableName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    PrimaryKeyColumn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "PrimaryKeyColumn",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyColumn_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyColumn_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyColumn_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyColumn_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyColumn_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyColumn_OnValueChanged);
                private static void _PrimaryKeyColumn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._PrimaryKeyColumn, sf);
                }
                private static bool _PrimaryKeyColumn_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.PrimaryKeyColumn_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrimaryKeyColumn_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrimaryKeyColumn_Validate(r);
                }
                private static string _PrimaryKeyColumn_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.PrimaryKeyColumn;
                }
                private static void _PrimaryKeyColumn_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PrimaryKeyColumn = v;
                }
                private static void _PrimaryKeyColumn_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.PrimaryKeyColumn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    PrimaryKeyValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "PrimaryKeyValue",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyValue_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyValue_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyValue_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyValue_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._PrimaryKeyValue_OnValueChanged);
                private static void _PrimaryKeyValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._PrimaryKeyValue, sf);
                }
                private static bool _PrimaryKeyValue_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.PrimaryKeyValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrimaryKeyValue_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrimaryKeyValue_Validate(r);
                }
                private static string _PrimaryKeyValue_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.PrimaryKeyValue;
                }
                private static void _PrimaryKeyValue_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PrimaryKeyValue = v;
                }
                private static void _PrimaryKeyValue_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.PrimaryKeyValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    ColumnName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "ColumnName",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ColumnName_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ColumnName_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ColumnName_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ColumnName_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ColumnName_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._ColumnName_OnValueChanged);
                private static void _ColumnName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._ColumnName, sf);
                }
                private static bool _ColumnName_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.ColumnName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ColumnName_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ColumnName_Validate(r);
                }
                private static string _ColumnName_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.ColumnName;
                }
                private static void _ColumnName_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ColumnName = v;
                }
                private static void _ColumnName_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.ColumnName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    OriginalValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "OriginalValue",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._OriginalValue_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._OriginalValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._OriginalValue_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._OriginalValue_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._OriginalValue_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._OriginalValue_OnValueChanged);
                private static void _OriginalValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._OriginalValue, sf);
                }
                private static bool _OriginalValue_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.OriginalValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _OriginalValue_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OriginalValue_Validate(r);
                }
                private static string _OriginalValue_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.OriginalValue;
                }
                private static void _OriginalValue_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OriginalValue = v;
                }
                private static void _OriginalValue_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.OriginalValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    NewValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "NewValue",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._NewValue_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._NewValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._NewValue_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._NewValue_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._NewValue_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._NewValue_OnValueChanged);
                private static void _NewValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._NewValue, sf);
                }
                private static bool _NewValue_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.NewValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _NewValue_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NewValue_Validate(r);
                }
                private static string _NewValue_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.NewValue;
                }
                private static void _NewValue_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.NewValue = v;
                }
                private static void _NewValue_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.NewValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, bool>.Entry
                    Deleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, bool>.Entry(
                        "Deleted",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._Deleted_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._Deleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._Deleted_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._Deleted_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._Deleted_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._Deleted_OnValueChanged);
                private static void _Deleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, bool>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._Deleted, sf);
                }
                private static bool _Deleted_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.Deleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _Deleted_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Deleted_Validate(r);
                }
                private static bool _Deleted_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.Deleted;
                }
                private static void _Deleted_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Deleted = v;
                }
                private static void _Deleted_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.Deleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry
                    UpdatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Entry(
                        "UpdatedBy",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedBy_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedBy_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedBy_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedBy_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedBy_OnValueChanged);
                private static void _UpdatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedBy, sf);
                }
                private static bool _UpdatedBy_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.UpdatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedBy_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedBy_Validate(r);
                }
                private static string _UpdatedBy_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedBy;
                }
                private static void _UpdatedBy_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UpdatedBy = v;
                }
                private static void _UpdatedBy_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.UpdatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, global::System.DateTime>.Entry
                    UpdatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, global::System.DateTime>.Entry(
                        "UpdatedOn",
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedOn_Stub,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedOn_Validate,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedOn_GetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedOn_SetImplementationValue,
                        global::LightSwitchApplication.AuditLog.DetailsClass.PropertySetProperties._UpdatedOn_OnValueChanged);
                private static void _UpdatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditLog.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.AuditLog.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedOn, sf);
                }
                private static bool _UpdatedOn_ComputeIsReadOnly(global::LightSwitchApplication.AuditLog e)
                {
                    bool result = false;
                    e.UpdatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedOn_Validate(global::LightSwitchApplication.AuditLog e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedOn_Validate(r);
                }
                private static global::System.DateTime _UpdatedOn_GetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedOn;
                }
                private static void _UpdatedOn_SetImplementationValue(global::LightSwitchApplication.AuditLog.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.UpdatedOn = global::LightSwitchApplication.AuditLog.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _UpdatedOn_OnValueChanged(global::LightSwitchApplication.AuditLog e)
                {
                    e.UpdatedOn_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _TableName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _PrimaryKeyColumn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _PrimaryKeyValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _ColumnName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _OriginalValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _NewValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, bool>.Data _Deleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, string>.Data _UpdatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditLog, global::LightSwitchApplication.AuditLog.DetailsClass, global::System.DateTime>.Data _UpdatedOn;
            
        }
    
        #endregion
    }
    
    #endregion
}

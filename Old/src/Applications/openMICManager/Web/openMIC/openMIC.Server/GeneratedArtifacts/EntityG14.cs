

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class SignalType : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the SignalType entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SignalType()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SignalType(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.SignalType> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.SignalType.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalType_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignalType_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Acronym
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Acronym);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Acronym, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Acronym_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Acronym_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Acronym_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Suffix
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Suffix);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Suffix, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suffix_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suffix_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suffix_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Abbreviation
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Abbreviation);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Abbreviation, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Abbreviation_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Abbreviation_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Abbreviation_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongAcronym
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.LongAcronym);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.LongAcronym, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongAcronym_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongAcronym_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongAcronym_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Source
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Source);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Source, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Source_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Source_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Source_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EngineeringUnits
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.EngineeringUnits);
            }
            set
            {
                global::LightSwitchApplication.SignalType.DetailsClass.SetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.EngineeringUnits, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineeringUnits_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineeringUnits_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineeringUnits_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Measurement> Measurements
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetValue(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Measurements);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Measurement> MeasurementsQuery
        {
            get
            {
                return global::LightSwitchApplication.SignalType.DetailsClass.GetQuery(this, global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Measurements);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.SignalType,
                global::LightSwitchApplication.SignalType.DetailsClass,
                global::LightSwitchApplication.SignalType.DetailsClass.IImplementation,
                global::LightSwitchApplication.SignalType.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass>.Entry
                __SignalTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass>.Entry(
                    global::LightSwitchApplication.SignalType.DetailsClass.__SignalType_CreateNew,
                    global::LightSwitchApplication.SignalType.DetailsClass.__SignalType_Created,
                    global::LightSwitchApplication.SignalType.DetailsClass.__SignalType_AllowSaveWithErrors);
            private static global::LightSwitchApplication.SignalType __SignalType_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.SignalType> es)
            {
                return new global::LightSwitchApplication.SignalType(es);
            }
            private static void __SignalType_Created(global::LightSwitchApplication.SignalType e)
            {
                e.SignalType_Created();
            }
            private static bool __SignalType_AllowSaveWithErrors(global::LightSwitchApplication.SignalType e)
            {
                bool result = false;
                e.SignalType_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.SignalType.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> Acronym
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Acronym) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> Suffix
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Suffix) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> Abbreviation
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Abbreviation) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> LongAcronym
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.LongAcronym) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> Source
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Source) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string> EngineeringUnits
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.EngineeringUnits) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, global::LightSwitchApplication.Measurement> Measurements
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Measurements) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, global::LightSwitchApplication.Measurement>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string Name { get; set; }
                new string Acronym { get; set; }
                new string Suffix { get; set; }
                new string Abbreviation { get; set; }
                new string LongAcronym { get; set; }
                new string Source { get; set; }
                new string EngineeringUnits { get; set; }
                new global::System.Collections.IEnumerable Measurements { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, int>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    Acronym = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "Acronym",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Acronym_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Acronym_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Acronym_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Acronym_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Acronym_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Acronym_OnValueChanged);
                private static void _Acronym_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._Acronym, sf);
                }
                private static bool _Acronym_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.Acronym_IsReadOnly(ref result);
                    return result;
                }
                private static void _Acronym_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Acronym_Validate(r);
                }
                private static string _Acronym_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.Acronym;
                }
                private static void _Acronym_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Acronym = v;
                }
                private static void _Acronym_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.Acronym_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    Suffix = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "Suffix",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Suffix_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Suffix_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Suffix_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Suffix_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Suffix_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Suffix_OnValueChanged);
                private static void _Suffix_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._Suffix, sf);
                }
                private static bool _Suffix_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.Suffix_IsReadOnly(ref result);
                    return result;
                }
                private static void _Suffix_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Suffix_Validate(r);
                }
                private static string _Suffix_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.Suffix;
                }
                private static void _Suffix_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Suffix = v;
                }
                private static void _Suffix_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.Suffix_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    Abbreviation = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "Abbreviation",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Abbreviation_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Abbreviation_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Abbreviation_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Abbreviation_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Abbreviation_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Abbreviation_OnValueChanged);
                private static void _Abbreviation_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._Abbreviation, sf);
                }
                private static bool _Abbreviation_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.Abbreviation_IsReadOnly(ref result);
                    return result;
                }
                private static void _Abbreviation_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Abbreviation_Validate(r);
                }
                private static string _Abbreviation_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.Abbreviation;
                }
                private static void _Abbreviation_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Abbreviation = v;
                }
                private static void _Abbreviation_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.Abbreviation_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    LongAcronym = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "LongAcronym",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._LongAcronym_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._LongAcronym_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._LongAcronym_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._LongAcronym_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._LongAcronym_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._LongAcronym_OnValueChanged);
                private static void _LongAcronym_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._LongAcronym, sf);
                }
                private static bool _LongAcronym_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.LongAcronym_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongAcronym_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongAcronym_Validate(r);
                }
                private static string _LongAcronym_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.LongAcronym;
                }
                private static void _LongAcronym_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongAcronym = v;
                }
                private static void _LongAcronym_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.LongAcronym_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    Source = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "Source",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Source_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Source_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Source_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Source_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Source_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Source_OnValueChanged);
                private static void _Source_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._Source, sf);
                }
                private static bool _Source_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.Source_IsReadOnly(ref result);
                    return result;
                }
                private static void _Source_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Source_Validate(r);
                }
                private static string _Source_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.Source;
                }
                private static void _Source_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Source = v;
                }
                private static void _Source_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.Source_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry
                    EngineeringUnits = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Entry(
                        "EngineeringUnits",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._EngineeringUnits_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._EngineeringUnits_ComputeIsReadOnly,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._EngineeringUnits_Validate,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._EngineeringUnits_GetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._EngineeringUnits_SetImplementationValue,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._EngineeringUnits_OnValueChanged);
                private static void _EngineeringUnits_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineeringUnits, sf);
                }
                private static bool _EngineeringUnits_ComputeIsReadOnly(global::LightSwitchApplication.SignalType e)
                {
                    bool result = false;
                    e.EngineeringUnits_IsReadOnly(ref result);
                    return result;
                }
                private static void _EngineeringUnits_Validate(global::LightSwitchApplication.SignalType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EngineeringUnits_Validate(r);
                }
                private static string _EngineeringUnits_GetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.EngineeringUnits;
                }
                private static void _EngineeringUnits_SetImplementationValue(global::LightSwitchApplication.SignalType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EngineeringUnits = v;
                }
                private static void _EngineeringUnits_OnValueChanged(global::LightSwitchApplication.SignalType e)
                {
                    e.EngineeringUnits_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, global::LightSwitchApplication.Measurement>.Entry
                    Measurements = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, global::LightSwitchApplication.Measurement>.Entry(
                        "Measurements",
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Measurements_Stub,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Measurements_GetReferencedEntities,
                        global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties._Measurements_GetEntityCollection);
                private static void _Measurements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SignalType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, global::LightSwitchApplication.Measurement>.Data> c, global::LightSwitchApplication.SignalType.DetailsClass d, object sf)
                {
                    c(d, ref d._Measurements, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Measurement> _Measurements_GetReferencedEntities(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Measurement, global::LightSwitchApplication.Measurement.DetailsClass>(global::LightSwitchApplication.SignalType.DetailsClass.PropertySetProperties.Measurements, ref d._Measurements);
                }
                private static global::System.Collections.IEnumerable _Measurements_GetEntityCollection(global::LightSwitchApplication.SignalType.DetailsClass d)
                {
                    return d.ImplementationEntity.Measurements;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _Acronym;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _Suffix;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _Abbreviation;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _LongAcronym;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _Source;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, string>.Data _EngineeringUnits;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SignalType, global::LightSwitchApplication.SignalType.DetailsClass, global::LightSwitchApplication.Measurement>.Data _Measurements;
            
        }
    
        #endregion
    }
    
    #endregion
}

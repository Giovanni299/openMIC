

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class Alarm : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Alarm entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Alarm()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Alarm(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Alarm> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Alarm.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarm_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Alarm_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TagName
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.TagName);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.TagName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TagName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TagName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TagName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> AssociatedMeasurementID
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AssociatedMeasurementID);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AssociatedMeasurementID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedMeasurementID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedMeasurementID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedMeasurementID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Severity
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Severity);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Severity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Operation
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Operation);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Operation, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operation_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operation_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operation_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> SetPoint
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.SetPoint);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.SetPoint, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SetPoint_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SetPoint_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SetPoint_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Tolerance
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Tolerance);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Tolerance, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tolerance_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tolerance_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tolerance_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Delay
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Delay);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Delay, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Delay_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Delay_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Delay_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Hysteresis
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Hysteresis);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Hysteresis, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hysteresis_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hysteresis_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hysteresis_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int LoadOrder
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.LoadOrder);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.LoadOrder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoadOrder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Enabled
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Enabled);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Enabled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Enabled_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.CreatedOn);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.CreatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.UpdatedOn);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.UpdatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UpdatedBy
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.UpdatedBy);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.UpdatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Measurement Measurement
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Measurement);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Measurement, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurement_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurement_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Measurement_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Node Node
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Node);
            }
            set
            {
                global::LightSwitchApplication.Alarm.DetailsClass.SetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Node, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Node_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AlarmLog> AlarmLogs
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AlarmLog> AlarmLogsQuery
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetQuery(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AlarmLog> AlarmLogs1
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetValue(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs1);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AlarmLog> AlarmLogs1Query
        {
            get
            {
                return global::LightSwitchApplication.Alarm.DetailsClass.GetQuery(this, global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs1);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Alarm,
                global::LightSwitchApplication.Alarm.DetailsClass,
                global::LightSwitchApplication.Alarm.DetailsClass.IImplementation,
                global::LightSwitchApplication.Alarm.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>.Entry
                __AlarmEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>.Entry(
                    global::LightSwitchApplication.Alarm.DetailsClass.__Alarm_CreateNew,
                    global::LightSwitchApplication.Alarm.DetailsClass.__Alarm_Created,
                    global::LightSwitchApplication.Alarm.DetailsClass.__Alarm_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Alarm __Alarm_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Alarm> es)
            {
                return new global::LightSwitchApplication.Alarm(es);
            }
            private static void __Alarm_Created(global::LightSwitchApplication.Alarm e)
            {
                e.Alarm_Created();
            }
            private static bool __Alarm_AllowSaveWithErrors(global::LightSwitchApplication.Alarm e)
            {
                bool result = false;
                e.Alarm_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Alarm.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string> TagName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.TagName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<global::System.Guid>> AssociatedMeasurementID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AssociatedMeasurementID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int> Severity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Severity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int> Operation
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Operation) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>> SetPoint
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.SetPoint) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>> Tolerance
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Tolerance) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>> Delay
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Delay) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>> Hysteresis
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Hysteresis) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int> LoadOrder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.LoadOrder) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, bool> Enabled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Enabled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime> UpdatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.UpdatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string> UpdatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.UpdatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Measurement> Measurement
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Measurement) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Measurement>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Node> Node
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Node) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Node>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog> AlarmLogs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog> AlarmLogs1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs1) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string TagName { get; set; }
                new global::System.Nullable<global::System.Guid> AssociatedMeasurementID { get; set; }
                new string Description { get; set; }
                new int Severity { get; set; }
                new int Operation { get; set; }
                new global::System.Nullable<double> SetPoint { get; set; }
                new global::System.Nullable<double> Tolerance { get; set; }
                new global::System.Nullable<double> Delay { get; set; }
                new global::System.Nullable<double> Hysteresis { get; set; }
                new int LoadOrder { get; set; }
                new bool Enabled { get; set; }
                new global::System.DateTime CreatedOn { get; set; }
                new string CreatedBy { get; set; }
                new global::System.DateTime UpdatedOn { get; set; }
                new string UpdatedBy { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Measurement { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Node { get; set; }
                new global::System.Collections.IEnumerable AlarmLogs { get; }
                new global::System.Collections.IEnumerable AlarmLogs1 { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry
                    TagName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry(
                        "TagName",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._TagName_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._TagName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._TagName_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._TagName_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._TagName_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._TagName_OnValueChanged);
                private static void _TagName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._TagName, sf);
                }
                private static bool _TagName_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.TagName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TagName_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TagName_Validate(r);
                }
                private static string _TagName_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.TagName;
                }
                private static void _TagName_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TagName = v;
                }
                private static void _TagName_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.TagName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    AssociatedMeasurementID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "AssociatedMeasurementID",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AssociatedMeasurementID_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AssociatedMeasurementID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AssociatedMeasurementID_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AssociatedMeasurementID_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AssociatedMeasurementID_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AssociatedMeasurementID_OnValueChanged);
                private static void _AssociatedMeasurementID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._AssociatedMeasurementID, sf);
                }
                private static bool _AssociatedMeasurementID_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.AssociatedMeasurementID_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssociatedMeasurementID_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssociatedMeasurementID_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _AssociatedMeasurementID_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.AssociatedMeasurementID;
                }
                private static void _AssociatedMeasurementID_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.AssociatedMeasurementID = v;
                }
                private static void _AssociatedMeasurementID_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.AssociatedMeasurementID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry
                    Severity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry(
                        "Severity",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Severity_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Severity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Severity_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Severity_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Severity_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Severity_OnValueChanged);
                private static void _Severity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Severity, sf);
                }
                private static bool _Severity_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Severity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Severity_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Severity_Validate(r);
                }
                private static int _Severity_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Severity;
                }
                private static void _Severity_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Severity = v;
                }
                private static void _Severity_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Severity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry
                    Operation = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry(
                        "Operation",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Operation_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Operation_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Operation_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Operation_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Operation_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Operation_OnValueChanged);
                private static void _Operation_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Operation, sf);
                }
                private static bool _Operation_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Operation_IsReadOnly(ref result);
                    return result;
                }
                private static void _Operation_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Operation_Validate(r);
                }
                private static int _Operation_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Operation;
                }
                private static void _Operation_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Operation = v;
                }
                private static void _Operation_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Operation_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry
                    SetPoint = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry(
                        "SetPoint",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._SetPoint_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._SetPoint_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._SetPoint_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._SetPoint_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._SetPoint_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._SetPoint_OnValueChanged);
                private static void _SetPoint_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._SetPoint, sf);
                }
                private static bool _SetPoint_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.SetPoint_IsReadOnly(ref result);
                    return result;
                }
                private static void _SetPoint_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SetPoint_Validate(r);
                }
                private static global::System.Nullable<double> _SetPoint_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.SetPoint;
                }
                private static void _SetPoint_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.SetPoint = v;
                }
                private static void _SetPoint_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.SetPoint_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry
                    Tolerance = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Tolerance",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Tolerance_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Tolerance_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Tolerance_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Tolerance_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Tolerance_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Tolerance_OnValueChanged);
                private static void _Tolerance_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Tolerance, sf);
                }
                private static bool _Tolerance_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Tolerance_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tolerance_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tolerance_Validate(r);
                }
                private static global::System.Nullable<double> _Tolerance_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Tolerance;
                }
                private static void _Tolerance_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Tolerance = v;
                }
                private static void _Tolerance_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Tolerance_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry
                    Delay = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Delay",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Delay_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Delay_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Delay_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Delay_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Delay_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Delay_OnValueChanged);
                private static void _Delay_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Delay, sf);
                }
                private static bool _Delay_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Delay_IsReadOnly(ref result);
                    return result;
                }
                private static void _Delay_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Delay_Validate(r);
                }
                private static global::System.Nullable<double> _Delay_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Delay;
                }
                private static void _Delay_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Delay = v;
                }
                private static void _Delay_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Delay_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry
                    Hysteresis = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Hysteresis",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Hysteresis_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Hysteresis_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Hysteresis_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Hysteresis_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Hysteresis_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Hysteresis_OnValueChanged);
                private static void _Hysteresis_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Hysteresis, sf);
                }
                private static bool _Hysteresis_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Hysteresis_IsReadOnly(ref result);
                    return result;
                }
                private static void _Hysteresis_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hysteresis_Validate(r);
                }
                private static global::System.Nullable<double> _Hysteresis_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Hysteresis;
                }
                private static void _Hysteresis_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Hysteresis = v;
                }
                private static void _Hysteresis_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Hysteresis_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry
                    LoadOrder = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Entry(
                        "LoadOrder",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._LoadOrder_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._LoadOrder_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._LoadOrder_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._LoadOrder_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._LoadOrder_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._LoadOrder_OnValueChanged);
                private static void _LoadOrder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._LoadOrder, sf);
                }
                private static bool _LoadOrder_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.LoadOrder_IsReadOnly(ref result);
                    return result;
                }
                private static void _LoadOrder_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LoadOrder_Validate(r);
                }
                private static int _LoadOrder_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.LoadOrder;
                }
                private static void _LoadOrder_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, int v)
                {
                    d.ImplementationEntity.LoadOrder = v;
                }
                private static void _LoadOrder_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.LoadOrder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, bool>.Entry
                    Enabled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, bool>.Entry(
                        "Enabled",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Enabled_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Enabled_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Enabled_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Enabled_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Enabled_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Enabled_OnValueChanged);
                private static void _Enabled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Enabled, sf);
                }
                private static bool _Enabled_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Enabled_IsReadOnly(ref result);
                    return result;
                }
                private static void _Enabled_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Enabled_Validate(r);
                }
                private static bool _Enabled_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Enabled;
                }
                private static void _Enabled_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Enabled = v;
                }
                private static void _Enabled_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Enabled_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.DateTime _CreatedOn_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreatedOn = global::LightSwitchApplication.Alarm.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Entry
                    UpdatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Entry(
                        "UpdatedOn",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedOn_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedOn_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedOn_OnValueChanged);
                private static void _UpdatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedOn, sf);
                }
                private static bool _UpdatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.UpdatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedOn_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedOn_Validate(r);
                }
                private static global::System.DateTime _UpdatedOn_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedOn;
                }
                private static void _UpdatedOn_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.UpdatedOn = global::LightSwitchApplication.Alarm.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _UpdatedOn_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.UpdatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry
                    UpdatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Entry(
                        "UpdatedBy",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedBy_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedBy_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._UpdatedBy_OnValueChanged);
                private static void _UpdatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._UpdatedBy, sf);
                }
                private static bool _UpdatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.UpdatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _UpdatedBy_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UpdatedBy_Validate(r);
                }
                private static string _UpdatedBy_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.UpdatedBy;
                }
                private static void _UpdatedBy_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UpdatedBy = v;
                }
                private static void _UpdatedBy_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.UpdatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Measurement>.Entry
                    Measurement = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Measurement>.Entry(
                        "Measurement",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_GetCoreImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_Refresh,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Measurement_OnValueChanged);
                private static void _Measurement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Measurement>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Measurement, sf);
                }
                private static bool _Measurement_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Measurement_IsReadOnly(ref result);
                    return result;
                }
                private static void _Measurement_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Measurement_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Measurement_GetCoreImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Measurement;
                }
                private static global::LightSwitchApplication.Measurement _Measurement_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Measurement, global::LightSwitchApplication.Measurement.DetailsClass>(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Measurement, ref d._Measurement);
                }
                private static void _Measurement_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::LightSwitchApplication.Measurement v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Measurement, ref d._Measurement, (i, ev) => i.Measurement = ev, v);
                }
                private static void _Measurement_Refresh(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Measurement, ref d._Measurement);
                }
                private static void _Measurement_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Measurement_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Node>.Entry
                    Node = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Node>.Entry(
                        "Node",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_ComputeIsReadOnly,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_Validate,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_GetCoreImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_GetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_SetImplementationValue,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_Refresh,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._Node_OnValueChanged);
                private static void _Node_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Node>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._Node, sf);
                }
                private static bool _Node_ComputeIsReadOnly(global::LightSwitchApplication.Alarm e)
                {
                    bool result = false;
                    e.Node_IsReadOnly(ref result);
                    return result;
                }
                private static void _Node_Validate(global::LightSwitchApplication.Alarm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Node_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Node_GetCoreImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.Node;
                }
                private static global::LightSwitchApplication.Node _Node_GetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Node, global::LightSwitchApplication.Node.DetailsClass>(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Node, ref d._Node);
                }
                private static void _Node_SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass d, global::LightSwitchApplication.Node v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Node, ref d._Node, (i, ev) => i.Node = ev, v);
                }
                private static void _Node_Refresh(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.Node, ref d._Node);
                }
                private static void _Node_OnValueChanged(global::LightSwitchApplication.Alarm e)
                {
                    e.Node_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Entry
                    AlarmLogs = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Entry(
                        "AlarmLogs",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AlarmLogs_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AlarmLogs_GetReferencedEntities,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AlarmLogs_GetEntityCollection);
                private static void _AlarmLogs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._AlarmLogs, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AlarmLog> _AlarmLogs_GetReferencedEntities(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AlarmLog, global::LightSwitchApplication.AlarmLog.DetailsClass>(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs, ref d._AlarmLogs);
                }
                private static global::System.Collections.IEnumerable _AlarmLogs_GetEntityCollection(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.AlarmLogs;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Entry
                    AlarmLogs1 = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Entry(
                        "AlarmLogs1",
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AlarmLogs1_Stub,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AlarmLogs1_GetReferencedEntities,
                        global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties._AlarmLogs1_GetEntityCollection);
                private static void _AlarmLogs1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Alarm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Data> c, global::LightSwitchApplication.Alarm.DetailsClass d, object sf)
                {
                    c(d, ref d._AlarmLogs1, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AlarmLog> _AlarmLogs1_GetReferencedEntities(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AlarmLog, global::LightSwitchApplication.AlarmLog.DetailsClass>(global::LightSwitchApplication.Alarm.DetailsClass.PropertySetProperties.AlarmLogs1, ref d._AlarmLogs1);
                }
                private static global::System.Collections.IEnumerable _AlarmLogs1_GetEntityCollection(global::LightSwitchApplication.Alarm.DetailsClass d)
                {
                    return d.ImplementationEntity.AlarmLogs1;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data _TagName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _AssociatedMeasurementID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data _Severity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data _Operation;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data _SetPoint;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data _Tolerance;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data _Delay;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.Nullable<double>>.Data _Hysteresis;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, int>.Data _LoadOrder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, bool>.Data _Enabled;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::System.DateTime>.Data _UpdatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, string>.Data _UpdatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Measurement>.Data _Measurement;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.Node>.Data _Node;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Data _AlarmLogs;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Alarm, global::LightSwitchApplication.Alarm.DetailsClass, global::LightSwitchApplication.AlarmLog>.Data _AlarmLogs1;
            
        }
    
        #endregion
    }
    
    #endregion
}
